{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filterContent","onChange","PersonForm","submit","getName","newName","getNumber","newNumber","value","type","onClick","event","Notification","message","messageState","className","baseUrl","axios","get","then","response","data","newObject","post","id","updatedObject","put","delete","App","useEffect","personService","initialPersons","setPersons","setPersonToShow","useState","persons","setNewName","setNewNumber","personToShow","errorMessage","setErrorMessage","setMessageState","showPerson","filter","person","name","toLowerCase","includes","target","number","preventDefault","checkIfNameExists","length","window","confirm","personFound","find","n","changedPerson","returnedPerson","map","p","catch","error","setTimeout","concat","i","key","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54c574cc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filterContent }) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                filter shown with <input onChange={filterContent} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ submit, getName, newName, getNumber, newNumber }) => {\r\n    return (\r\n        <>\r\n            <h2>add a new</h2>\r\n            <form>\r\n                <div>\r\n                    name: <input onChange={getName} value={newName} />\r\n                </div>\r\n                <div>\r\n                    number: <input onChange={getNumber} value={newNumber} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" onClick={(event) => submit(event, newNumber)}>add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message, messageState }) => {\r\n    if (message == null) {\r\n        return null\r\n    }\r\n    if (messageState === 'success') {\r\n        return (\r\n            <div className=\"success\">\r\n                {message}\r\n            </div>\r\n        )\r\n    } else if (messageState === 'error') {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, updatedObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deletePerson\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n    useEffect(() => personService.getAll().then((initialPersons) => { setPersons(initialPersons); setPersonToShow(initialPersons) }), [])\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [personToShow, setPersonToShow] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [messageState, setMessageState] = useState('success')\r\n\r\n    const getName = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const getNumber = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const submit = (event, number) => {\r\n        event.preventDefault();\r\n        const checkIfNameExists = persons.filter(person => person.name === newName)\r\n        if (checkIfNameExists.length !== 0) {\r\n            const id = checkIfNameExists[0].id\r\n            if (window.confirm(`${newName} is already added to phonebook,replace old number with a new one?`)) {\r\n                const personFound = persons.find(n => n.id === id)\r\n                const changedPerson = { ...personFound, number: number }\r\n\r\n                personService.update(id, changedPerson).then(returnedPerson => {\r\n                    setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\r\n                    setPersonToShow(persons.map(p => p.id !== id ? p : returnedPerson))\r\n                }).catch(error => {\r\n                    setErrorMessage(`Information of ${newName} has already been removed from the server`)\r\n                    setMessageState('error')\r\n                    setTimeout(() => setErrorMessage(null), 5000)\r\n                    setPersons(persons.filter(p => p.id !== id))\r\n                    setPersonToShow(personToShow.filter(p => p.id !== id))\r\n                })\r\n            }\r\n            setErrorMessage(`Modified number for ${newName}`)\r\n            setMessageState('success')\r\n            setTimeout(() => setErrorMessage(null), 5000)\r\n            setNewName('')\r\n            setNewNumber('')\r\n        } else {\r\n            const newObj = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n\r\n            personService.create(newObj)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                    setPersonToShow(persons.concat(returnedPerson))\r\n                    setErrorMessage(`Added ${newName}`)\r\n                    setMessageState('success')\r\n                    setTimeout(() => setErrorMessage(null), 5000)\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                }).catch(error => {\r\n                    setErrorMessage(error.response.data.error)\r\n                    setMessageState('error')\r\n                    setTimeout(() => setErrorMessage(null), 5000)\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                })\r\n        }\r\n    }\r\n\r\n    const filterContent = (event) => {\r\n        const showPerson = persons.filter((person) => person.name.toLowerCase().includes(event.target.value.toLowerCase()) === true)\r\n        setPersonToShow(showPerson)\r\n    }\r\n\r\n    const deletePerson = (event, id, name) => {\r\n        event.preventDefault()\r\n        if (window.confirm(`Delete ${name} ?`)) {\r\n            personService.deletePerson(id).then(response => {\r\n                setPersons(persons.filter(p => p.id !== id))\r\n                setPersonToShow(personToShow.filter(p => p.id !== id))\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={errorMessage} messageState={messageState} />\r\n            <Filter filterContent={filterContent} />\r\n            <PersonForm submit={submit} getNumber={getNumber} getName={getName} newName={newName} newNumber={newNumber} />\r\n            <h2>Numbers</h2>\r\n            {personToShow.map((person, i) => {\r\n                return (\r\n                    <div key={i}>\r\n                        <span>{person.name} {person.number}</span>&nbsp;\r\n                        <button onClick={(event) => deletePerson(event, person.id, person.name)}>delete</button>\r\n                        <br />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}